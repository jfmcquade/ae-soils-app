# Deploy preview url for labelled PRs
# Specifies deployment target based on pr target branch
# Master -> plh_global
# Deployment/{deployment_name} -> {deployment_name}
name: Deployment Preview
on:
  pull_request:
    types: [labeled, synchronize]
    branches:
      - deployment/*
      - master
jobs:
  build_and_preview:
    if: contains(github.event.pull_request.labels.*.name, 'Test - preview')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      # Extract deployment name as the slug of target PR branch via string operators, e.g. /deployment/plh_tz -> plh_tz
      # https://www.linuxjournal.com/article/8919, https://github.com/greenbone/gsa/actions/runs/1277581365/workflow
      - name: Set Environment Deployment
        run: |
          if [ "$GITHUB_BASE_REF" = "master" ];                    \
          then echo "DEPLOYMENT_NAME=plh_global" >> $GITHUB_ENV;              \
          else echo "DEPLOYMENT_NAME=${GITHUB_BASE_REF##*/}" >> $GITHUB_ENV;  \
          fi;
        shell: bash
      - run: |
          echo $GITHUB_BASE_REF
          echo $DEPLOYMENT_NAME
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./.yarn/cache
          # If cachebusting required (e.g. breaking yarn changes on update) change `v1` to another number
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1-
      - name: Populate firebaseConfig.ts
        env:
          FIREBASE_CONFIG_TS: ${{ secrets.FIREBASE_CONFIG_TS }}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts
      - run: yarn install
      - name: Set Scripts Deployment
        run: yarn scripts deployment set $DEPLOYMENT_NAME
      - run: yarn build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_PLH_TEENS_APP1 }}"
          projectId: plh-teens-app1
          target: "${{env.DEPLOYMENT_NAME}}"
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
